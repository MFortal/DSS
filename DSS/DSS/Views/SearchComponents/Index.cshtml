@model  DSS.ViewModels.ViewSearch

@{
    ViewBag.Title = "Поиск компонентов";
}

<style>
    /*Стили для формы поиска*/
    .flex, .flexButtons {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
        padding: 5px;
    }

    .flex-itm {
        border: 1px solid gray;
        border-radius: 10px 0 0 10px;
        height: 200px;
        width: auto;
        overflow-y: scroll; /* прокрутка по вертикали */
        margin: 5px;
        padding: 15px;
    }

    .flex-btn {
        margin: 5px;
    }

    .nameProperty {
        font-size: 16px;
        text-align: center;
    }

    sup {
        cursor: help;
    }

    table {
        margin-top: 50px;
    }

    .component {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        font-size: 16px;
    }

    /*DropDownLists*/
    <style >
    /* Style The Dropdown Button */
    .dropbtn {
        padding: 16px;
        font-size: 16px;
        cursor: pointer;
        display: block;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                background-color: antiquewhite;
            }
    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    .notFound {
        font-size: 14px;
        color: darkgray;
    }
</style>

<h3>Поиск компонентов</h3>

<div class="dropdown">
    <div class="dropbtn">
        @foreach (var thisCat in @ViewBag.categoryThis)
        {
            @thisCat.Name
        }
    </div>
    <div class="dropdown-content">
        @foreach (var category in ViewBag.Categories)
        {
            <a href="@Url.Action("Index", "SearchComponents", new { categoryId = category.Id, subcategoryId = -1 })">
                @category.Name
            </a>
        }
    </div>
</div>
<div class="dropdown">>></div>
<div class="dropdown">
    <div class="dropbtn">
        @foreach (var thisSub in @ViewBag.subcategoryThis)
        {
            @thisSub.Name
        }
    </div>
    <div class="dropdown-content">
        @foreach (var subcategory in ViewBag.Subcategories)
        {
            <a href="@Url.Action("Index", "SearchComponents", new { categoryId = ViewBag.categoryId, subcategoryId = subcategory.Id})">
                @subcategory.Name
            </a>
        }
    </div>
</div>

@using (Html.BeginForm("Show", "SearchComponents"))
{
    <div class="flex">
        @foreach (var item in Model.PropertyValuesSubcategories)
        {
            <div class="flex-itm">
                <p class="nameProperty">
                    @Html.Label(item.PropertyName)
                    @if (item.Description != null)
                    {
                        <sup>
                            <img src="../../Image/Blobs/question.png"
                                 width="15px" height="15px" title="@item.Description" />
                        </sup>
                    }
                </p>
                @foreach (var value in item.Values)
                {
                    <p> @Html.CheckBox("Values", value) @value @item.Unit </p>
                }

                @*@Html.ActionLink("Edit", "Edit", new { id = item.PropertyName }) |
                    @Html.ActionLink("Details", "Details", new { id = item.PropertyName }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.PropertyName })*@
            </div>
        }
    </div>
    <div class="flexButtons">
        <input class="btn btn-success flex-btn" type="submit" value="Искать" />
        <input class="btn btn-default flex-btn" type="reset" value="Сбросить" />
    </div>
}

<table class="table">
    @*Вывод наименований всех свойств компонентов*@
    <tr>
        <th>
            @Html.Label("Наименование")
        </th>
        @foreach (var subItem in Model.PropertyValuesSubcategories)
        {
            <th>
                @Html.Label(subItem.PropertyName)
            </th>
        }
    </tr>

    @foreach (var item in Model.ComponentsSubcategory)
    {
        <tr>
            @*Вывод наименования компонента*@
            <td>
                <a href="@Url.Action("Details", "SearchComponents", new { component = item })" class="component">@Html.DisplayFor(modelItem => item.Name)</a>
            </td>
            @foreach (var subItem in Model.PropertyValuesSubcategories)
            {
                <td>
                    @{
                        var count = item.Values.Where(x => x.PropertyId == subItem.PropertyId).Select(x => x.PropertyId).Count();
                    }
                    @if (count == 1)
                    {
                        foreach (var value in item.Values)
                        {
                            if (value.PropertyId == subItem.PropertyId)
                            {
                                @value.Value
                            }
                        }
                    }
                    else
                    if (subItem.PropertyId == -1)
                    {
                        <sup>
                            <img src="../../Image/Countries/@Html.DisplayFor(modelItem => item.CountryFlag)" width="20" height="20" />
                        </sup>
                        @item.CountryName
                    }
                    else
                    {
                        <p class="notFound">нет значения</p>
                    }
                </td>
            }
        </tr>
    }




    @*@*Вывод значений свойств
        @foreach (var item in Model.ComponentsSubcategory)
        {
            <tr>


                @foreach (var value in item.Values)
                {
                    foreach (var propertyItem in Model.PropertyValuesSubcategories)
                    {
                        <td>
                            @if (value.PropertyId.Equals(propertyItem.PropertyId))
                            {
                                @value.Value @value.Unit
                            }
                            else
                            {
                                <p>нет значения</p>
                            }
                        </td>
                    }
                }
            </tr>
        }


        foreach (var item in Model.PropertyValuesSubcategories)
        {
            foreach (var item2 in item.Values)
            {
                foreach (var comp in Model.ComponentsSubcategory)
                {

                }
            }
        }*@
</table>
